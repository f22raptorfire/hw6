/* Generated By:JavaCC: Do not edit this line. CDBParserConstants.java */

/**
 * Token literal values and constants.
 * Generated by org.javacc.parser.OtherFilesGen#start()
 */
public interface CDBParserConstants {

  /** End of File. */
  int EOF = 0;
  /** RegularExpression Id. */
  int SINGLE_LINE_COMMENT = 6;
  /** RegularExpression Id. */
  int MULTI_LINE_COMMENT = 9;
  /** RegularExpression Id. */
  int DECIMAL_NUMBER = 10;
  /** RegularExpression Id. */
  int REAL_NUMBER = 11;
  /** RegularExpression Id. */
  int DIGITS = 12;
  /** RegularExpression Id. */
  int STRING_LITERAL = 13;
  /** RegularExpression Id. */
  int SINGLE_QUOTE = 14;
  /** RegularExpression Id. */
  int DOUBLE_QUOTE = 15;
  /** RegularExpression Id. */
  int STAR = 16;
  /** RegularExpression Id. */
  int SEMICOLON = 17;
  /** RegularExpression Id. */
  int EQUALS = 18;
  /** RegularExpression Id. */
  int NOT_EQUALS = 19;
  /** RegularExpression Id. */
  int GREATER_THAN = 20;
  /** RegularExpression Id. */
  int LESS_THAN = 21;
  /** RegularExpression Id. */
  int GREATER_EQUALS = 22;
  /** RegularExpression Id. */
  int LESS_EQUALS = 23;
  /** RegularExpression Id. */
  int BETWEEN = 24;
  /** RegularExpression Id. */
  int LIKE = 25;
  /** RegularExpression Id. */
  int IN = 26;
  /** RegularExpression Id. */
  int IS = 27;
  /** RegularExpression Id. */
  int NOT = 28;
  /** RegularExpression Id. */
  int CASE = 29;
  /** RegularExpression Id. */
  int WHEN = 30;
  /** RegularExpression Id. */
  int THEN = 31;
  /** RegularExpression Id. */
  int ELSE = 32;
  /** RegularExpression Id. */
  int END = 33;
  /** RegularExpression Id. */
  int SELECT = 34;
  /** RegularExpression Id. */
  int UPDATE = 35;
  /** RegularExpression Id. */
  int DROP = 36;
  /** RegularExpression Id. */
  int CREATE = 37;
  /** RegularExpression Id. */
  int ALTER = 38;
  /** RegularExpression Id. */
  int INSERT = 39;

  /** Lexical state. */
  int DEFAULT = 0;
  /** Lexical state. */
  int IN_MULTI_LINE_COMMENT = 1;

  /** Literal token values. */
  String[] tokenImage = {
    "<EOF>",
    "\" \"",
    "\"\\t\"",
    "\"\\n\"",
    "\"\\r\"",
    "\"\\f\"",
    "<SINGLE_LINE_COMMENT>",
    "\"/*\"",
    "<token of kind 8>",
    "\"*/\"",
    "<DECIMAL_NUMBER>",
    "<REAL_NUMBER>",
    "<DIGITS>",
    "<STRING_LITERAL>",
    "\"\\\'\"",
    "\"\\\"\"",
    "\"*\"",
    "\";\"",
    "\"=\"",
    "\"<>\"",
    "\">\"",
    "\"<\"",
    "\">=\"",
    "\"<=\"",
    "\"BETWEEN\"",
    "\"LIKE\"",
    "\"IN\"",
    "\"IS\"",
    "\"NOT\"",
    "\"CASE\"",
    "\"WHEN\"",
    "\"THEN\"",
    "\"ELSE\"",
    "\"END\"",
    "\"SELECT\"",
    "\"UPDATE\"",
    "\"DROP\"",
    "\"CREATE\"",
    "\"ALTER\"",
    "\"INSERT\"",
  };

}
